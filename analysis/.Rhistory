question == "feed" ~ "informational goal"),
response = case_when(response == "Not At All Likely" ~ "not"))
View(df)
df <- select (df.raw, -c(320:343)) %>%
slice(-46) %>%
slice(-1:-5) %>%
slice(-61) %>%
filter(consent != "")%>%
#select the variables that we need
select(ResponseId, starts_with("X1"),starts_with("X2"), starts_with("X3"), starts_with("X4"), starts_with("X5"), starts_with("X6"), starts_with("X7"),  starts_with("X8"), starts_with("X9"), starts_with("X10"), starts_with("X11"), starts_with("X12"),starts_with("Check")) %>%
#change data from wide to long format
pivot_longer(cols = c(starts_with("X1"),starts_with("X2"), starts_with("X3"),
starts_with("X4"), starts_with("X5"), starts_with("X6"),
starts_with("X7"), starts_with("X8"), starts_with("X9"),
starts_with("X10"), starts_with("X11"), starts_with("X12")),
names_to = "trial", values_to = "response") %>%
#separate each type of trial
separate(trial, into=c("person", "trial", "prior", "question")) %>%
#rename the columns
rename(id = `ResponseId`) %>%
#remove the lines for participants who didn't answer each question.
filter(response != "")
df$response
%>%
#change the way the answers are coded
mutate(trial = case_when(trial == 1 ~ "good, smile",
trial == 2 ~ "bad, smile",
trial == 3 ~ "good, frown",
trial == 4 ~ "bad, frown"),
prior = case_when(prior == 1 ~ "generally good",
prior == 2 ~ "generally bad",
prior == 3 ~ "no prior"),
question = case_when(question == "nice" ~ "social goal",
question == "feed" ~ "informational goal"),
response = case_when(response == "Not At All\nLikely" ~ 1))
df <- select (df.raw, -c(320:343)) %>%
slice(-46) %>%
slice(-1:-5) %>%
slice(-61) %>%
filter(consent != "")%>%
#select the variables that we need
select(ResponseId, starts_with("X1"),starts_with("X2"), starts_with("X3"), starts_with("X4"), starts_with("X5"), starts_with("X6"), starts_with("X7"),  starts_with("X8"), starts_with("X9"), starts_with("X10"), starts_with("X11"), starts_with("X12"),starts_with("Check")) %>%
#change data from wide to long format
pivot_longer(cols = c(starts_with("X1"),starts_with("X2"), starts_with("X3"),
starts_with("X4"), starts_with("X5"), starts_with("X6"),
starts_with("X7"), starts_with("X8"), starts_with("X9"),
starts_with("X10"), starts_with("X11"), starts_with("X12")),
names_to = "trial", values_to = "response") %>%
#separate each type of trial
separate(trial, into=c("person", "trial", "prior", "question")) %>%
#rename the columns
rename(id = `ResponseId`) %>%
#remove the lines for participants who didn't answer each question.
filter(response != "") %>%
#change the way the answers are coded
mutate(trial = case_when(trial == 1 ~ "good, smile",
trial == 2 ~ "bad, smile",
trial == 3 ~ "good, frown",
trial == 4 ~ "bad, frown"),
prior = case_when(prior == 1 ~ "generally good",
prior == 2 ~ "generally bad",
prior == 3 ~ "no prior"),
question = case_when(question == "nice" ~ "social goal",
question == "feed" ~ "informational goal"),
response = case_when(response == "Not At All\nLikely" ~ 1))
df$response
df <- select (df.raw, -c(320:343)) %>%
slice(-46) %>%
slice(-1:-5) %>%
slice(-61) %>%
filter(consent != "")%>%
#select the variables that we need
select(ResponseId, starts_with("X1"),starts_with("X2"), starts_with("X3"), starts_with("X4"), starts_with("X5"), starts_with("X6"), starts_with("X7"),  starts_with("X8"), starts_with("X9"), starts_with("X10"), starts_with("X11"), starts_with("X12"),starts_with("Check")) %>%
#change data from wide to long format
pivot_longer(cols = c(starts_with("X1"),starts_with("X2"), starts_with("X3"),
starts_with("X4"), starts_with("X5"), starts_with("X6"),
starts_with("X7"), starts_with("X8"), starts_with("X9"),
starts_with("X10"), starts_with("X11"), starts_with("X12")),
names_to = "trial", values_to = "response") %>%
#separate each type of trial
separate(trial, into=c("person", "trial", "prior", "question")) %>%
#rename the columns
rename(id = `ResponseId`) %>%
#remove the lines for participants who didn't answer each question.
filter(response != "") %>%
#change the way the answers are coded
mutate(trial = case_when(trial == 1 ~ "good, smile",
trial == 2 ~ "bad, smile",
trial == 3 ~ "good, frown",
trial == 4 ~ "bad, frown"),
prior = case_when(prior == 1 ~ "generally good",
prior == 2 ~ "generally bad",
prior == 3 ~ "no prior"),
question = case_when(question == "nice" ~ "social goal",
question == "feed" ~ "informational goal"),
response = case_when(response == "Not At All\nLikely" ~ 1,
response == "Somewhat\nLikely" ~ 2,
response == "Very\nLikely" ~ 3,
response == "Extremely\nLikely" ~ 4))
View(df)
library(here)
library(ggplot2)
library(ggplot2)
library(tidyverse)
library(langcog)
rm(list = ls())
d.goal.mnpltState.raw <- read.csv(here("data/210520emoRSA_MainStateManipulation_COMMGOALS_August 5, 2021_18.29.csv"))
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61)
dim(d.goal.mnpltState)
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "state_manipulation",
condition_level = case_when(condition_level == 1 ~ "good",
condition_level == 2 ~ "bad",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal")
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
checks <- d.goal.mnpltState %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE)
| grepl("0", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d.goal.mnpltState <- full_join(d.goal.mnpltState, checks) %>%
filter(check_perc_correct == 1) %>%
select(-starts_with("Check"), -person, -check_perc_correct, -utt_exp)
d.goal.mnpltGoal.raw <- read.csv(here("data/210708emoRSA_InfoSocGoalManipulation_COMMGOALS_August 5, 2021_18.17.csv"))
d.goal.mnpltGoal <- d.goal.mnpltGoal.raw %>%
slice(-1:-6) %>%
slice(-61)
dim(d.goal.mnpltGoal)
d.goal.mnpltGoal <- d.goal.mnpltGoal.raw %>%
slice(-1:-6) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "goal_manipulation",
condition_level = case_when(condition_level == 1 ~ "inf_goal",
condition_level == 2 ~ "soc_goal",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal")
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
checks <- d.goal.mnpltGoal %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE)
| grepl("0", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d.goal.mnpltGoal <- full_join(d.goal.mnpltGoal, checks) %>%
filter(check_perc_correct == 1) %>%
select(-starts_with("Check"), -person, -check_perc_correct, -utt_exp)
d.goal.mnpltEmoComm.raw <- read.csv(here("data/210708emoRSA_EmoCommManipulation_COMMGOALS_August 5, 2021_18.27.csv"))
d.goal.mnpltEmoComm <- d.goal.mnpltEmoComm.raw %>%
slice(-1:-6) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "emoIsComm_manipulation",
condition_level = case_when(condition_level == 1 ~ "comm",
condition_level == 2 ~ "non_comm",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal")
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
checks <- d.goal.mnpltEmoComm %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE)
| grepl("0", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d.goal.mnpltEmoComm <- full_join(d.goal.mnpltEmoComm, checks) %>%
filter(check_perc_correct == 1) %>%
select(-starts_with("Check"), -person, -check_perc_correct, -utt_exp)
d.goal.combined <- rbind(d.goal.mnpltState, d.goal.mnpltGoal, d.goal.mnpltEmoComm)
write_csv(d.goal.combined, here("data/clean_data_goals.csv"))
d.goal.mnpltState.raw <- read.csv(here("data/210520emoRSA_MainStateManipulation_COMMGOALS_August 5, 2021_18.29.csv"))
d.goal.mnpltState$response
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`)
View(d.goal.mnpltState)
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
filter(response != "")
View(d.goal.mnpltState)
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response")
View(d.goal.mnpltState)
d.goal.mnpltState$response
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "state_manipulation",
condition_level = case_when(condition_level == 1 ~ "good",
condition_level == 2 ~ "bad",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal"),
response = case_when(response == "Not At All\nLikely" ~ 1,
response == "Somewhat\nLikely" ~ 2,
response == "Very\nLikely" ~ 3,
response == "Extremely\nLikely" ~ 4)
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "state_manipulation",
condition_level = case_when(condition_level == 1 ~ "good",
condition_level == 2 ~ "bad",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal"),
response = case_when(response == "Not At All\nLikely" ~ 1,
response == "Somewhat\nLikely" ~ 2,
response == "Very\nLikely" ~ 3,
response == "Extremely\nLikely" ~ 4)
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
)
d.goal.mnpltState$response
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "state_manipulation",
condition_level = case_when(condition_level == 1 ~ "good",
condition_level == 2 ~ "bad",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal"),
response = case_when(response == "Not At All\nLikely" ~ 1,
response == "Somewhat\nLikely" ~ 2,
response == "Very\nLikely" ~ 3,
response == "Extremely\nLikely" ~ 4)
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
View(d.goal.mnpltState)
d.goal.mnpltState.raw <- read.csv(here("data/210520emoRSA_MainStateManipulation_COMMGOALS_August 5, 2021_18.29.csv"))
d.goal.mnpltState <- d.goal.mnpltState.raw %>%
slice(-1:-5) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "state_manipulation",
condition_level = case_when(condition_level == 1 ~ "good",
condition_level == 2 ~ "bad",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal"),
response = case_when(response == "Not At All\nLikely" ~ 1,
response == "Somewhat\nLikely" ~ 2,
response == "Very\nLikely" ~ 3,
response == "Extremely\nLikely" ~ 4)
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
checks <- d.goal.mnpltState %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE)
| grepl("0", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d.goal.mnpltState <- full_join(d.goal.mnpltState, checks) %>%
filter(check_perc_correct == 1) %>%
select(-starts_with("Check"), -person, -check_perc_correct, -utt_exp)
d.goal.mnpltGoal.raw <- read.csv(here("data/210708emoRSA_InfoSocGoalManipulation_COMMGOALS_August 5, 2021_18.17.csv"))
d.goal.mnpltGoal <- d.goal.mnpltGoal.raw %>%
slice(-1:-6) %>%
slice(-61) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "goal_manipulation",
condition_level = case_when(condition_level == 1 ~ "inf_goal",
condition_level == 2 ~ "soc_goal",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal"),
response = case_when(response == "Not At All\nLikely" ~ 1,
response == "Somewhat\nLikely" ~ 2,
response == "Very\nLikely" ~ 3,
response == "Extremely\nLikely" ~ 4)
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
checks <- d.goal.mnpltGoal %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE)
| grepl("0", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d.goal.mnpltGoal <- full_join(d.goal.mnpltGoal, checks) %>%
filter(check_perc_correct == 1) %>%
select(-starts_with("Check"), -person, -check_perc_correct, -utt_exp)
d.goal.mnpltEmoComm.raw <- read.csv(here("data/210708emoRSA_EmoCommManipulation_COMMGOALS_August 5, 2021_18.27.csv"))
d.goal.mnpltEmoComm <- d.goal.mnpltEmoComm.raw %>%
slice(-1:-6) %>%
select(ResponseId, starts_with("X"), starts_with("Check")) %>%
pivot_longer(cols = starts_with("X"),
names_to = "trial", values_to = "response") %>%
separate(trial, into=c("person","utt_exp","condition_level", "question")) %>%
rename(id = `ResponseId`) %>%
mutate(utt = case_when(utt_exp == 1 ~ "good",
utt_exp == 2 ~ "bad",
utt_exp == 3 ~ "good",
utt_exp == 4 ~ "bad"),
exp = case_when(utt_exp == 1 ~ "smile",
utt_exp == 2 ~ "smile",
utt_exp == 3 ~ "frown",
utt_exp == 4 ~ "frown"),
condition_name = "emoIsComm_manipulation",
condition_level = case_when(condition_level == 1 ~ "comm",
condition_level == 2 ~ "non_comm",
condition_level == 3 ~ "no_info"),
question = case_when(question == "feed" ~ "informational goal",
question == "nice" ~ "social goal"),
response = case_when(response == "Not At All\nLikely" ~ 1,
response == "Somewhat\nLikely" ~ 2,
response == "Very\nLikely" ~ 3,
response == "Extremely\nLikely" ~ 4)
#condition = fct_relevel(condition, "PU_PE", "PU_NE", "NU_PE", "NU_NE"),
#response = fct_relevel(response, "1", "2", "3", "4", "5", "6")
) %>%
filter(response != "")
checks <- d.goal.mnpltEmoComm %>%
mutate(check_score1 = case_when(grepl("H", Check1, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score2 = case_when(grepl("L", Check2, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score3 = case_when(grepl("O", Check3, ignore.case = TRUE)
| grepl("0", Check3, ignore.case = TRUE) ~ 1, TRUE ~ 0),
check_score4 = case_when(grepl("U", Check4, ignore.case = TRUE) ~ 1, TRUE ~ 0)) %>%
group_by(id) %>%
summarize(check_perc_correct = mean(c(check_score1, check_score2, check_score3, check_score4)))
ggplot(checks, aes(check_perc_correct)) +
geom_histogram(binwidth=.01) +
theme_bw() +
xlab("accuracy on check questions") +
ylab("number of participants")
# Only include those who got all check questions correct
d.goal.mnpltEmoComm <- full_join(d.goal.mnpltEmoComm, checks) %>%
filter(check_perc_correct == 1) %>%
select(-starts_with("Check"), -person, -check_perc_correct, -utt_exp)
d.goal.combined <- rbind(d.goal.mnpltState, d.goal.mnpltGoal, d.goal.mnpltEmoComm)
write_csv(d.goal.combined, here("data/clean_data_goals.csv"))
