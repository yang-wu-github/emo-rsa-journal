unite("utt_emo", utt, emo) %>%
mutate(
mean = ifelse(is.na(mean), 0, mean),
ci_lower = ifelse(is.na(ci_lower), 0, ci_lower),
ci_upper = ifelse(is.na(ci_upper), 0, ci_upper)
) %>%
#group_by(model, question) %>%
group_by(manipulation, manipulation_level, question) %>%
summarize(
n = n(),
mse = mean((MAP - mean)^2),
r = cor(MAP, mean),
r2 = r^2
) -> md_goal_corr_table
md_goal_corr_table %>%
kable()
md_goals %>%
filter(parameter=="infGoal") %>%
unite("utt_emo", utt, emo) %>%
mutate(
mean = ifelse(is.na(mean), 0, mean),
ci_lower = ifelse(is.na(ci_lower), 0, ci_lower),
ci_upper = ifelse(is.na(ci_upper), 0, ci_upper),
rating = factor(rating)
) %>%
ggplot(., aes( x = MAP, xmin = cred_lower, xmax = cred_upper,
y = mean, ymin = ci_lower, ymax = ci_upper,
shape = utt_emo, color = rating))+
geom_abline(intercept = 0, slope = 1, alpha = 0.3, linetype = 2)+
geom_linerange()+
geom_text(data = md_goal_corr_table[md_goal_corr_table$question=="informational goal",], x = 0.15, y = 0.96,
aes(label = paste("r=", round(r, 2), sep= "")),
inherit.aes = F)+
ggstance::geom_linerangeh()+
geom_point()+
coord_fixed()+
#facet_grid(question~model)+
facet_wrap(vars(manipulation, manipulation_level, nrows = 3))+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 1))+
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1))+
theme(legend.position = 'right')+
labs(
x = "Model Predicted Probability",
y = "Human Proportion Selected"
)
md_goals_wide %>%
filter(parameter=="infGoal") %>%
unite("utt_emo", utt, emo) %>%
mutate(
mean = ifelse(is.na(mean), 0, mean),
ci_lower = ifelse(is.na(ci_lower), 0, ci_lower),
ci_upper = ifelse(is.na(ci_upper), 0, ci_upper),
rating = factor(rating)
) %>%
ggplot(., aes( x = MAP, xmin = cred_lower, xmax = cred_upper,
y = mean, ymin = ci_lower, ymax = ci_upper,
shape = utt_emo, color = rating))+
geom_abline(intercept = 0, slope = 1, alpha = 0.3, linetype = 2)+
geom_linerange()+
geom_text(data = md_goal_corr_table[md_goal_corr_table$question=="informational goal",], x = 0.15, y = 0.96,
aes(label = paste("r=", round(r, 2), sep= "")),
inherit.aes = F)+
ggstance::geom_linerangeh()+
geom_point()+
coord_fixed()+
#facet_grid(question~model)+
facet_wrap(vars(manipulation, manipulation_level, nrows = 3))+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 1))+
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1))+
theme(legend.position = 'right')+
labs(
x = "Model Predicted Probability",
y = "Human Proportion Selected"
)
# combine model with human
md_soc_long <- rbind(df_soc_summary, h_soc_summary)
md_soc_long %>%
unite("utt_emo", utt, emo) %>%
ggplot(., aes(x=rating, y=mean, group=condition, color=condition)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1, position=position_dodge(0.05)) +
geom_line(aes(linetype=condition))+
geom_point(aes(shape=condition))+
scale_color_manual(values=c('#E69F00', '#999999'))+
ylim(0,1)+
facet_grid(vars(utt_emo), vars(manipulation, manipulation_level))
md_goals_wide %>%
filter(parameter=="socGoal") %>%
unite("utt_emo", utt, emo) %>%
mutate(
mean = ifelse(is.na(mean), 0, mean),
ci_lower = ifelse(is.na(ci_lower), 0, ci_lower),
ci_upper = ifelse(is.na(ci_upper), 0, ci_upper),
rating = factor(rating)
) %>%
ggplot(., aes( x = MAP, xmin = cred_lower, xmax = cred_upper,
y = mean, ymin = ci_lower, ymax = ci_upper,
shape = utt_emo, color = rating))+
geom_abline(intercept = 0, slope = 1, alpha = 0.3, linetype = 2)+
geom_linerange()+
geom_text(data = md_goal_corr_table[md_goal_corr_table$question=="social goal",], x = 0.15, y = 0.96,
aes(label = paste("r=", round(r, 2), sep= "")),
inherit.aes = F)+
ggstance::geom_linerangeh()+
geom_point()+
coord_fixed()+
#facet_grid(question~model)+
facet_wrap(vars(manipulation, manipulation_level, nrows = 3))+
scale_y_continuous(limits = c(0, 1), breaks = c(0, 1))+
scale_x_continuous(limits = c(0, 1), breaks = c(0, 1))+
theme(legend.position = 'right')+
labs(
x = "Model Predicted Probability",
y = "Human Proportion Selected"
)
md_state_long %>%
unite("utt_emo", utt, emo) %>%
ggplot(., aes(x=state, y=mean, group=condition, color=condition)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1, position=position_dodge(0.05)) +
geom_line(aes(linetype=condition))+
geom_point(aes(shape=condition))+
scale_color_manual(values=c('#E69F00', '#999999'))+
ylim(0,1)+
facet_grid(vars(utt_emo), vars(manipulation, manipulation_level))
md_state_long %>%
unite("utt_emo", utt, emo) %>%
ggplot(., aes(x=state, y=mean, group=condition, color=condition)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1, position=position_dodge(0.05)) +
geom_line(aes(linetype=condition))+
geom_point(aes(shape=condition))+
scale_color_manual(values=c('#E69F00', '#999999'))+
ylim(0,1)+
facet_grid(vars(utt_emo), vars(manipulation, manipulation_level))+
theme(legend.position="bottom")
md_goal_corr_table
md_goal_corr_table[md_goal_corr_table$question=="informational goal"] %>%
kable()
md_goal_corr_table[md_goal_corr_table$question=="informational goal",] %>%
kable()
h_state_summary <- h_state %>%
rename(emo = exp,
state = response,
manipulation = condition_name,
manipulation_level = condition_level) %>%
mutate(manipulation_level = ifelse(manipulation_level=="inf_goal", "inf", manipulation_level),
manipulation_level = ifelse(manipulation_level=="soc_goal", "soc", manipulation_level))%>%
group_by(manipulation, manipulation_level, utt, emo, state) %>%
tidyboot(summary_function = count_summary_fn,
statistics_functions = function(x) x %>%
summarise(across(stat, mean_ci_funs, .names = "{.fn}"))) %>%
mutate(condition = "human")
View(h_state_summary)
library(tidyverse)
library(tidyboot)
library(ggplot2)
library(ggthemes)
library(knitr)
library(coda)
library(viridis)
library(here)
library(patchwork)
theme_set(theme_few())
results_path <- "models/bda_results/"
model.files <- list.files(
path = paste(here(), results_path, sep = "/"),
pattern = "bda-M"
)
model.files
library(tidyverse)
library(tidyboot)
library(ggplot2)
library(ggthemes)
library(knitr)
library(coda)
library(viridis)
library(here)
library(patchwork)
theme_set(theme_few())
estimate_mode <- function(s) {
d <- density(s)
return(d$x[which.max(d$y)])
}
hpd_upper <- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","upper"])
}
hpd_lower <- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","lower"])
}
count_summary_fn <- function(x) x %>%
summarize(n = n()) %>%
mutate(stat = n / sum(n))
mean_ci_funs <- list("ci_lower" = ci_lower, "mean" = mean, "ci_upper" = ci_upper)
results_path <- "models/bda_results/"
model.files <- list.files(
path = paste(here(), results_path, sep = "/"),
pattern = "bda-M"
)
model.files
df1.m <- map_dfr(model.files[1], function(model.file){
read_csv(here(paste(results_path, model.file, sep = "")),
col_types = cols(
iter = col_double(),
model = col_character(),
chain = col_double(),
manipulation = col_character(),
manipulation_level = col_character(),
parameter = col_character(),
utt = col_character(),
emo = col_character(),
value = col_character(),
prob = col_double(),
score = col_double()
))
})
df1.m %>%
filter(parameter == "parameter", is.na(emo)) %>%
ggplot(., aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")
ggsave(here("/models/figures/mb7_global_parameters_chain1.pdf"), width = 8, height = 5)
df2.m <- map_dfr(model.files[2], function(model.file){
read_csv(here(paste(results_path, model.file, sep = "")),
col_types = cols(
iter = col_double(),
model = col_character(),
chain = col_double(),
manipulation = col_character(),
manipulation_level = col_character(),
parameter = col_character(),
utt = col_character(),
emo = col_character(),
value = col_character(),
prob = col_double(),
score = col_double()
))
})
df2.m %>%
filter(parameter == "parameter", is.na(emo)) %>%
ggplot(., aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")
ggsave(here("/models/figures/mb7_global_parameters_chain2.pdf"), width = 8, height = 5)
df3.m <- map_dfr(model.files[2], function(model.file){
read_csv(here(paste(results_path, model.file, sep = "")),
col_types = cols(
iter = col_double(),
model = col_character(),
chain = col_double(),
manipulation = col_character(),
manipulation_level = col_character(),
parameter = col_character(),
utt = col_character(),
emo = col_character(),
value = col_character(),
prob = col_double(),
score = col_double()
))
})
df3.m <- map_dfr(model.files[3], function(model.file){
read_csv(here(paste(results_path, model.file, sep = "")),
col_types = cols(
iter = col_double(),
model = col_character(),
chain = col_double(),
manipulation = col_character(),
manipulation_level = col_character(),
parameter = col_character(),
utt = col_character(),
emo = col_character(),
value = col_character(),
prob = col_double(),
score = col_double()
))
})
df3.m %>%
filter(parameter == "parameter", is.na(emo)) %>%
ggplot(., aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")
ggsave(here("/models/figures/mb7_global_parameters_chain3.pdf"), width = 8, height = 5)
View(df1.m)
df1.m %>%
filter(utt == "goalExp", is.na(emo)) %>%
ggplot(., aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")
df1.goalExp <- df1.m %>%
filter(utt == "goalExp", is.na(emo))
goalExp1 <- ggplot(df1.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 1 - goalExp")
ggsave(here("/models/figures/mb7_global_parameters_chain1.pdf"), width = 8, height = 5)
goalExp1
goalExp1 <- ggplot(df1.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 1 - goalExp")+
xlim(0.5, 5)
goalExp1
ggsave(here("/models/figures/mb7_global_parameters_chain1.pdf"), width = 8, height = 5)
goalExp2 <- ggplot(df2.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 1 - goalExp")+
xlim(0.5, 5)
goalExp2
df2.goalExp <- df2.m %>%
filter(utt == "goalExp", is.na(emo))
goalExp2 <- ggplot(df2.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 1 - goalExp")+
xlim(0.5, 5)
goalExp2
df3.goalExp <- df3.m %>%
filter(utt == "goalExp", is.na(emo))
goalExp3 <- ggplot(df3.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 1 - goalExp")+
xlim(0.5, 5)
goalExp3
goalExp <- goalExp1 + goalExp2 + goalExp3
goalExp
df1.goalExp <- df1.m %>%
filter(utt == "goalExp", is.na(emo))
goalExp1 <- ggplot(df1.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 1")+
xlim(0.5, 5)
goalExp1
df2.goalExp <- df2.m %>%
filter(utt == "goalExp", is.na(emo))
goalExp2 <- ggplot(df2.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 2")+
xlim(0.5, 5)
goalExp2
df3.goalExp <- df3.m %>%
filter(utt == "goalExp", is.na(emo))
goalExp3 <- ggplot(df3.goalExp, aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")+
ggtitle("Chain 3")+
xlim(0.5, 5)
goalExp3
goalExp <- goalExp1 + goalExp2 + goalExp3
goalExp
ggsave(here("/models/figures/mb7_global_parameters_goalExp.pdf"), width = 8, height = 5)
ggsave(here("/models/figures/mb7_global_parameters_goalExp.png"), width = 8, height = 5)
library(tidyverse)
library(tidyboot)
library(ggplot2)
library(ggthemes)
library(knitr)
library(coda)
library(viridis)
library(here)
library(patchwork)
theme_set(theme_few())
estimate_mode <- function(s) {
d <- density(s)
return(d$x[which.max(d$y)])
}
hpd_upper <- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","upper"])
}
hpd_lower <- function(s){
m <- HPDinterval(mcmc(s))
return(m["var1","lower"])
}
count_summary_fn <- function(x) x %>%
summarize(n = n()) %>%
mutate(stat = n / sum(n))
mean_ci_funs <- list("ci_lower" = ci_lower, "mean" = mean, "ci_upper" = ci_upper)
h_state <- read_csv(here("/data/clean_data_true_state.csv"))
h_state_summary <- h_state %>%
rename(emo = exp,
state = response,
manipulation = condition_name,
manipulation_level = condition_level) %>%
mutate(manipulation_level = ifelse(manipulation_level=="inf_goal", "inf", manipulation_level),
manipulation_level = ifelse(manipulation_level=="soc_goal", "soc", manipulation_level))%>%
group_by(manipulation, manipulation_level, utt, emo, state) %>%
tidyboot(summary_function = count_summary_fn,
statistics_functions = function(x) x %>%
summarise(across(stat, mean_ci_funs, .names = "{.fn}"))) %>%
mutate(condition = "human")
h_goal <- read_csv(here("/data/clean_data_goals.csv"))
h_goal_summary <- h_goal %>%
rename(emo = exp,
manipulation = condition_name,
manipulation_level = condition_level) %>%
mutate(manipulation_level = ifelse(manipulation_level=="inf_goal", "inf", manipulation_level),
manipulation_level = ifelse(manipulation_level=="soc_goal", "soc", manipulation_level))%>%
group_by(manipulation, manipulation_level, utt, emo, question, response) %>%
tidyboot(summary_function = count_summary_fn,
statistics_functions = function(x) x %>%
summarise(across(stat, mean_ci_funs, .names = "{.fn}")))%>%
mutate(condition = "human")%>%
rename(rating = 'response')
h_inf_summary <- h_goal_summary[h_goal_summary$question=="informational goal",]
h_soc_summary <- h_goal_summary[h_goal_summary$question=="social goal",]
# all 3 chains
df.m <- map_dfr(model.files, function(model.file){
read_csv(here(paste(results_path, model.file, sep = "")),
col_types = cols(
iter = col_double(),
model = col_character(),
chain = col_double(),
manipulation = col_character(),
manipulation_level = col_character(),
parameter = col_character(),
utt = col_character(),
emo = col_character(),
value = col_character(),
prob = col_double(),
score = col_double()
))
})
df.m %>%
filter(utt == "parameter", is.na(emo)) %>%
ggplot(., aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")
df.m %>%
filter(parameter == "parameter", is.na(emo)) %>%
ggplot(., aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt), scales = "free_x")
df.m %>%
filter(parameter == "parameter", is.na(emo)) %>%
group_by(utt) %>%
summarize(
MAP = estimate_mode(prob),
cred_upper = hpd_upper(prob),
cred_lower = hpd_lower(prob)
) -> df_parameter_summary
df_parameter_summary %>%
kable(.)
df.m %>%
filter(parameter == "parameter", is.na(emo) == FALSE) %>%
ggplot(., aes(x = prob))+
geom_histogram(position = position_dodge())+
facet_grid(cols = vars(utt, emo), rows = vars(value), scales = "free_x")
df.m %>%
filter(parameter == "parameter", is.na(emo) == FALSE) %>%
group_by(utt, emo, value) %>%
summarize(
MAP = estimate_mode(prob),
cred_upper = hpd_upper(prob),
cred_lower = hpd_lower(prob)
) %>%
rename(prior = 'utt', level = 'emo') -> df_parameter_summary
df_parameter_summary %>%
kable(.)
df_state <- df.m %>%
filter(parameter == "state") %>%
mutate(state = as.numeric(value)) %>%
select(-value)
df_state_summary <- df_state %>%
group_by(manipulation, manipulation_level, utt, emo, state) %>%
summarize(
mean = estimate_mode(prob),
ci_upper = hpd_upper(prob),
ci_lower = hpd_lower(prob)
) %>%
mutate(condition = "mb7")
# combine model with human
md_state_long <- rbind(df_state_summary, h_state_summary)
md_state_long %>%
unite("utt_emo", utt, emo) %>%
ggplot(., aes(x=state, y=mean, group=condition, color=condition)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1,
position=position_dodge(0.05)) +
geom_line(aes(linetype=condition))+
geom_point(aes(shape=condition))+
scale_color_manual(values=c('#E69F00', '#999999'))+
ylim(0,1)+
facet_grid(vars(utt_emo), vars(manipulation, manipulation_level))+
theme(legend.position="bottom")
md_state_long %>%
unite("utt_emo", utt, emo) %>%
ggplot(., aes(x=state, y=mean, group=manipulation_level, color=manipulation_level)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1,
position=position_dodge(0.05)) +
geom_line(aes(linetype=condition))+
geom_point(aes(shape=condition))+
scale_color_manual(values=c('#E69F00', '#999999'))+
ylim(0,1)+
facet_grid(vars(utt_emo), vars(manipulation, condition))+
theme(legend.position="bottom")
md_state_long %>%
unite("utt_emo", utt, emo) %>%
ggplot(., aes(x=state, y=mean, group=manipulation_level, color=manipulation_level)) +
geom_errorbar(aes(ymin=ci_lower, ymax=ci_upper), width=.1,
position=position_dodge(0.05)) +
geom_line(aes(linetype=condition))+
geom_point(aes(shape=condition))+
#scale_color_manual(values=c('#E69F00', '#999999'))+
ylim(0,1)+
facet_grid(vars(utt_emo), vars(manipulation, condition))+
theme(legend.position="bottom")
View(md_state_long)
filter(md_state_long$manipulation == "emoIsComm_manipulation", utt=="bad", emo == "frown")
ggsave(here("/models/figures/mb7_state_inference_by_manipulation_condition.png"), width = 20, height = 5)
ggsave(here("/models/figures/mb7_state_inference_by_manipulation_condition.png"), width = 10, height = 5)
